
#:import Factory kivy.factory.Factory

#:set background_color (.95, .95, .95, 1)
#:set console_background_color (0, 0, 0, 1)
#:set black_color (0, 0, 0, 1)
#:set green_color (0, 1, 0, 1)
#:set red_color (1, 0, 0, 1)
#:set dashboard_color (.85, .85, .85, 1)
#:set agents_color black_color
#:set agents_color_active green_color
#:set agents_color_active_red red_color
#:set cb_color_active green_color
#:set b_color_active green_color
#:set _Qpadding 1


<MLabel>:
    color: black_color
    font_size: "12sp"

<NLabel>:
    font_size: "14sp"

<MInput>:
    multiline: False
    size_hint_y: None
    height: "30dp"
    on_text_validate:
        print("hello", self)

<BreakButton@Button>:
    text: "Break"
    size_hint_y: None
    height: "50dp"
    on_release:
        Factory.PopPage().open()

<Console>:
    canvas.before:
        Color:
            rgba: console_background_color
        Rectangle:
            size: self.size
            pos: self.pos
    viewclass: 'NLabel'
    scroll_y: 0
    scroll_type: ['bars', 'content']
    bar_width: "5dp"
    RecycleBoxLayout:
        default_size: None, dp(20)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

<DashBoard>:
    canvas.before:
        Color:
            rgba: dashboard_color
        Rectangle:
            size: self.size
            pos: self.pos
    viewclass: 'MLabel'
    scroll_type: ['bars', 'content']
    bar_width: "5dp"
    RecycleBoxLayout:
        default_size: None, dp(56)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

<SourceWidget>:
    canvas.before:
        Color:
            rgba: agents_color if not self.state else agents_color_active
        Ellipse:
            size: self.size
            pos: self.pos
        Color:
            rgba: background_color
        Ellipse:
            size: self.width-dp(_Qpadding*2), self.height-dp(_Qpadding*2)
            pos: self.x+dp(_Qpadding), self.y+dp(_Qpadding)
    text: "33KV"  
    color: agents_color if not self.state else agents_color_active
    size_hint: None, None
    width: "50dp"
    height: "30dp"

<LineWidget>:
    canvas:
        Color:
            rgba: agents_color
        Line:
            points: (self.line_a, self.line_b, self.line_c, self.line_d)


<LineCap@Widget>:
    canvas:
        Color:
            rgba: agents_color
        Line:
            points: (self.x, self.y, self.x+self.width, self.y+self.height//2, self.x, self.y+self.height)
    size_hint: None, None
    size: "6dp", "10dp"


<CBWidget>:
    canvas:
        Color:
            rgba: cb_color_active if self.state else agents_color_active_red
        Line:
            width: 2.
            points: (self.x, self.y, self.x+self.width, self.y+self.height)
        Line:
            width: 2.
            points: (self.x, self.y+self.height, self.x+self.width, self.y)
    size_hint: None, None
    size: "10dp", "10dp"

<BusWidget>:
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.rotate
            origin: self.center
        Color:
            rgba: b_color_active if self.state else agents_color_active_red
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba: background_color
        Rectangle:
            size: self.width-dp(_Qpadding*2), self.height-dp(_Qpadding*2)
            pos: self.x+dp(_Qpadding), self.y+dp(_Qpadding)
    canvas.after:
        PopMatrix
        
    size_hint: None, None
    size: "65dp", "25dp"
    text: "{}: {}".format(self.name, "live" if self.state else "dead")
    bold: True

<PopPage@ModalView>:
    background: "white"
    overlay_color: (0, 0, 0, .1)
    size_hint: .5, None
    height: self.width
    size_hint_max_x: app.root.height - dp(100)
    size_hint_min_x: app.root.height//2
    BoxLayout:
        orientation: "vertical"
        padding: "20dp"
        spacing: "10dp"
        MLabel:
            text: "SIMULATE BUS VOLTAGE"
            font_size: sp(24)
            size_hint_y: .5
        BoxLayout:
            orientation: "horizontal"
            size_hint_x: .9
            pos_hint: {"center_x": .5}
            spacing: "30dp"
            BoxLayout:
                orientation: "vertical"
                MLabel:
                    text: "Bus name"
                    size_hint_y: None
                    text_size: self.size
                    height: "30dp"
                MInput:
                    id: name_input
            BoxLayout:
                orientation: "vertical"
                MLabel:
                    text: "Voltage"
                    size_hint_y: None
                    text_size: self.size
                    height: "30dp"
                MInput:
                    id: voltage_input
        BoxLayout:
            orientation:
        Button:
            text: "Simulate Voltage"
            size_hint: .9, None
            height: "60dp"
            pos_hint: {"center_x": .5}
            bold: True
            on_release:
                root.dismiss()
                app.root.ids.simulation_canvas.simulate_bus(name_input.text.upper(), voltage_input.text.upper())

        Button:
            text: "Restart"
            size_hint: .5, None
            height: "30dp"
            pos_hint: {"center_x": .5}
            on_release:
                root.dismiss()
                app.root.ids.simulation_canvas.refresh()

<Message@ModalView>:
    overlay_color: (0, 0, 0, .05)
    background: "white"
    size_hint: None, None
    size: "400dp", "80dp"
    MLabel:
        id: msg
        text: "Bus name not found"
        bold: True
        color: "red"
        font_size: sp(16)
    